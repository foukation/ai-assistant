package com.cmdc.ai.assist.constraint

/*
 * 获取网关代理服务
 */

/**
 * 表示代理服务器的数据类
 *
 * 该数据类包含了两种类型的代理地址：HTTP和WebSocket
 * 主要用于存储和传递代理配置信息
 */
data class AgentServeData(
    /**
     * HTTP代理地址
     * */
    val http: String, // HTTP代理地址
    /**
     * WebSocket代理地址
     * */
    val ws: String,   // WebSocket代理地址
)


/**
 * 网关服务请求数据类
 *
 * 该数据类用于封装代理服务请求的相关信息，包括设备的密钥、厂商、型号、唯一标识、MAC地址、IP地址和版本号
 * 主要作用是作为请求对象，携带设备信息进行服务请求
 */
data class AgentServeReq(
    /**
     * 密钥，用于验证请求的合法性
     * */
    val secret: String,    // 密钥，用于验证请求的合法性
    /**
     * 厂商标识，表示设备的制造商
     * */
    val vendor: String,    // 厂商标识，表示设备的制造商
    /**
     * 设备型号，用于区分不同的设备类型
     * */
    val model: String,     // 设备型号，用于区分不同的设备类型
    /**
     * 设备唯一标识，用于唯一确定一个设备
     * */
    var sn: String,        // 设备唯一标识，用于唯一确定一个设备
    /**
     * 设备MAC地址，网络设备的物理地址
     * */
    var mac: String?,      // 设备MAC地址，网络设备的物理地址
    /**
     * 设备IP地址，设备在网络中的逻辑地址
     * */
    var ip: String?,       // 设备IP地址，设备在网络中的逻辑地址
    /**
     * 设备版本号，表示设备当前的软件或固件版本
     * */
    var version: String?,  // 设备版本号，表示设备当前的软件或固件版本
)

/**
 * 网关服务响应数据类
 *
 * 该数据类用于封装代理服务请求的相关信息，包括设备的密钥、厂商、型号、唯一标识、MAC地址、IP地址和版本号
 * 主要作用是作为请求对象，携带设备信息进行服务请求
 */
data class AgentServeRes(
    /**
     * 网关验证令牌，用于验证代理服务的合法性
     * */
    val token: String,         // 网关验证令牌，用于验证代理服务的合法性
    /**
     * 数据内容，包含代理服务的具体信息
     * */
    val data: AgentServeData,  // 数据内容，包含代理服务的具体信息
    /**
     * 代理有效期（单位：秒），表示该代理服务的有效时间长度
     * */
    val expires: Int,          // 代理有效期（单位：秒），表示该代理服务的有效时间长度
    /**
     * 状态码（1：使用代理，0：不使用代理），指示是否需要使用代理服务
     * */
    var status: Int,           // 状态码（1：使用代理，0：不使用代理），指示是否需要使用代理服务
)
